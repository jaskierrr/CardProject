// Code generated by MockGen. DO NOT EDIT.
// Source: ./cards.go

// Package mock is a generated GoMock package.
package mock

import (
	models "card-project/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pgconn "github.com/jackc/pgx/v5/pgconn"
)

// MockCardsRepo is a mock of CardsRepo interface.
type MockCardsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockCardsRepoMockRecorder
}

// MockCardsRepoMockRecorder is the mock recorder for MockCardsRepo.
type MockCardsRepoMockRecorder struct {
	mock *MockCardsRepo
}

// NewMockCardsRepo creates a new mock instance.
func NewMockCardsRepo(ctrl *gomock.Controller) *MockCardsRepo {
	mock := &MockCardsRepo{ctrl: ctrl}
	mock.recorder = &MockCardsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardsRepo) EXPECT() *MockCardsRepoMockRecorder {
	return m.recorder
}

// DeleteCardID mocks base method.
func (m *MockCardsRepo) DeleteCardID(ctx context.Context, id int) (pgconn.CommandTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCardID", ctx, id)
	ret0, _ := ret[0].(pgconn.CommandTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCardID indicates an expected call of DeleteCardID.
func (mr *MockCardsRepoMockRecorder) DeleteCardID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCardID", reflect.TypeOf((*MockCardsRepo)(nil).DeleteCardID), ctx, id)
}

// GetCardID mocks base method.
func (m *MockCardsRepo) GetCardID(ctx context.Context, id int) (models.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCardID", ctx, id)
	ret0, _ := ret[0].(models.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCardID indicates an expected call of GetCardID.
func (mr *MockCardsRepoMockRecorder) GetCardID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCardID", reflect.TypeOf((*MockCardsRepo)(nil).GetCardID), ctx, id)
}

// GetCards mocks base method.
func (m *MockCardsRepo) GetCards(ctx context.Context) ([]*models.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCards", ctx)
	ret0, _ := ret[0].([]*models.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCards indicates an expected call of GetCards.
func (mr *MockCardsRepoMockRecorder) GetCards(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCards", reflect.TypeOf((*MockCardsRepo)(nil).GetCards), ctx)
}

// PostCard mocks base method.
func (m *MockCardsRepo) PostCard(ctx context.Context, card models.Card) (models.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostCard", ctx, card)
	ret0, _ := ret[0].(models.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostCard indicates an expected call of PostCard.
func (mr *MockCardsRepoMockRecorder) PostCard(ctx, card interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostCard", reflect.TypeOf((*MockCardsRepo)(nil).PostCard), ctx, card)
}
